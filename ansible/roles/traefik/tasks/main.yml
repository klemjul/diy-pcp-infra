---
# tasks file for roles/traefik

- name: Check if traefik exists
  ansible.builtin.stat:
    path: "{{ traefik_dir_bin }}/traefik"
  register: __check_traefik_present

- name: If traefik exists get version
  ansible.builtin.shell: "cat /etc/systemd/system/traefik.service | grep Version | sed s/'.*Version '//g"
  register: __get_traefik_version
  when: __check_traefik_present.stat.exists
  tags:
    - skip_ansible_lint
  changed_when: false

- name: Create traefik user
  ansible.builtin.user:
    name: "{{ traefik_user }}"
    shell: /usr/sbin/nologin
    system: true
    create_home: false

- name: Create traefik directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ traefik_user }}"
    group: "{{ traefik_group }}"
    mode: 0755
  loop:
    - "{{ traefik_dir_conf }}"
    - "{{ traefik_dir_log }}"

- name: Create temp dir
  ansible.builtin.file:
    path: "/tmp/traefik_v{{ traefik_version }}_linux_amd64/"
    state: directory
    mode: 0755

- name: Download and unzip traefik if not exist
  ansible.builtin.unarchive:
    src: "https://github.com/traefik/traefik/releases/download/v{{ traefik_version }}/traefik_v{{ traefik_version }}_linux_amd64.tar.gz"
    dest: /tmp/traefik_v{{ traefik_version }}_linux_amd64/
    remote_src: yes
    validate_certs: false
  when: not __check_traefik_present.stat.exists or not __get_traefik_version.stdout == traefik_version

- name: Move the binary to the final destination
  ansible.builtin.copy:
    src: "/tmp/traefik_v{{ traefik_version }}_linux_amd64/traefik"
    dest: "{{ traefik_dir_bin }}"
    owner: "{{ traefik_user }}"
    group: "{{ traefik_group }}"
    mode: 0750
    remote_src: yes
  when: not __check_traefik_present.stat.exists or not __get_traefik_version.stdout == traefik_version

- name: Clean
  ansible.builtin.file:
    path: /tmp/traefik_v{{ traefik_version }}_linux_amd64/
    state: absent

- name: Install service
  ansible.builtin.template:
    src: traefik.service.j2
    dest: /etc/systemd/system/traefik.service
    owner: root
    group: root
    mode: 0750
  notify: Restart traefik

- name: Add configuration
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "{{ traefik_dir_conf }}/{{ item }}"
    owner: "{{ traefik_user }}"
    group: "{{ traefik_group }}"
    mode: 0750
  loop:
    - "traefik.toml"
    - "dynamic.toml"
  notify: Restart traefik

- name: Service always started
  ansible.builtin.systemd:
    name: traefik
    state: started
    enabled: true
