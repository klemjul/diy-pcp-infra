- name: Check if master is initialized
  ansible.builtin.uri:
    url: "https://{{ hostvars[kubeadm_init_master].ansible_default_ipv4.address }}:6443"
    validate_certs: no # checkov:skip=CKV_ANSIBLE_1
    status_code: [403]
  register: result
  until: "result.status == 403"
  retries: 20
  delay: 5

- name: Check and wait a master
  delegate_to: "{{ kubeadm_init_master }}"
  ansible.builtin.shell: kubectl get nodes | grep " Ready"
  register: __cmd_res
  retries: 100
  delay: 5
  until: __cmd_res.stdout_lines | count > 0
  changed_when: __cmd_res.rc != 0
  tags:
    - skip_ansible_lint

- name: Check if server already installed is ready
  delegate_to: "{{ kubeadm_init_master }}"
  ansible.builtin.command: kubectl get nodes
  register: __cmd_res
  changed_when: __cmd_res.rc != 0

- name: Get token command
  delegate_to: "{{ kubeadm_init_master }}"
  ansible.builtin.command: kubeadm init phase upload-certs --upload-certs
  register: __kubeadm_certs
  when: ansible_hostname not in __cmd_res.stdout
  tags:
    - skip_ansible_lint

- name: Get command join command
  delegate_to: "{{ kubeadm_init_master }}"
  ansible.builtin.command: kubeadm token create --print-join-command
  register: __kubeadm_join
  when: ansible_hostname not in __cmd_res.stdout
  tags:
    - skip_ansible_lint

- name: Joining new worker to cluster
  ansible.builtin.shell: "{{ __kubeadm_join.stdout_lines[0] }} --certificate-key {{ __kubeadm_certs.stdout_lines[2] }} --apiserver-advertise-address={{ ansible_default_ipv4.address }}"
  when: ansible_hostname not in __cmd_res.stdout and ansible_hostname in groups[kubeadm_worker_group_name]
  tags:
    - skip_ansible_lint

- name: Joining new master to cluster
  ansible.builtin.shell: "{{ __kubeadm_join.stdout_lines[0] }} --control-plane --certificate-key {{ __kubeadm_certs.stdout_lines[2] }} --apiserver-advertise-address={{ ansible_default_ipv4.address }}"
  when: ansible_hostname not in __cmd_res.stdout and ansible_hostname in groups[kubeadm_master_group_name]
  tags:
    - skip_ansible_lint
